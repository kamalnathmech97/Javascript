function mergeSort(arr,start,end){
  if(start<end){
    let mid = start+ Math.floor((end-start)/2)
    mergeSort(arr,start,mid)
    mergeSort(arr,mid+1,end)
    merge(arr,start,mid,end)
  }
}

function merge(arr,start,mid,end){
 let n1=  mid-start+1;
 let n2 = end-mid;
 
 let left = new Array(n1)
 let right = new Array(n2)
 
 for(let i=0; i<n1; i++){
   left[i] = arr[start+i]
 }
 
 for(let j=0; j<n2; j++){
   right[j] = arr[mid+1+j]
 }
 
 let i = 0;
 let j = 0; 
 let k = start
 
 while(i<n1 && j<n2){
   if(left[i] < right[j]){
     arr[k] = left[i]
     i++
     k++
   }
   else{
     arr[k] = right[j]
     j++
     k++
   }
 }
 while(i<n1){
   arr[k]= left[i]
   i++
   k++
 }
 
 while(j<n2){
   arr[k]=right[j]
   j++
   k++
 }
}

let arr = [11,8,4,-10,-2,10]
let n = arr.length;
mergeSort(arr,0,n-1)
for(let i=0; i<n;i++){
  console.log(arr[i])
}
