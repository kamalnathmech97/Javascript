Promise is an assurance that something will be done. Promise is used to keep track of whether the asynchronous event has been executed or not 
and determines what happens after the event has occurred. It is an object having 3 states namely:

Pending: Initial State, before the event has happened.
Resolved: After the operation completed successfully.
Rejected: If the operation had error during execution, the promise fails.

Example: While requesting data from a database server, the Promise is in a pending state until the data is received. 
If the data is received successfully, then the Promise is in resolved state and if the data could not be received successfully, the Promise is in the rejected state. 


 EXAMPLE
const promise = new Promise(function (resolve, reject) {
	const string1 = "geeksforgeeks";
	const string2 = "geeksforgeeks";
	if (string1 === string2) {
	resolve();
	} else {
	reject();
	}
});

promise
	.then(function () {
	console.log("Promise resolved successfully");
	})
	.catch(function () {
	console.log("Promise is rejected");
	});

