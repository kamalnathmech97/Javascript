map() transforms every element in an array individually and creates a new array. 
filter() removes elements that are not required and creates a new array containing the ones needed. 
Finally, reduce() reduces all array elements into a single value


1.// map function in numbers :

let arr= [5,10,15,20];
let modifiedArray = arr.map(double)

function double(num){
    return num*10
}
console.log(modifiedArray)


2.// map function in array of objects :

   let checkName =[
              {name:"kamal", lastName:"nath"},
              {name:"kishore", lastName:"VV"}
                  ];
let fullName = checkName.map(testing);

function testing (array){
    return `${array.name} ${array.lastName}`;
}

console.log(fullName);

const util = require('util');

3.map function with subchild
const employees = [
  {
    id: 1,
    name: 'Alice',
    role: 'Manager',
    children: [
      { id: 101, name: 'John', age: 10 },
      { id: 102, name: 'Emily', age: 8 }
    ]
  },
  {
    id: 2,
    name: 'Bob',
    role: 'Supervisor',
    children: [
      { id: 201, name: 'Alex', age: 12 },
      { id: 202, name: 'Sophia', age: 9 }
    ]
  }
];

const employeesWithChildren = employees.map(employee => {
  return {
    Id: employee.id,
    Name: employee.name,
    Role: employee.role,
    Children: employee.children.map(child => {
      return {
        ChildId: child.id,
        ChildName: child.name,
        ChildAge: child.age
      };
    })
  };
});

console.log(employeesWithChildren);

