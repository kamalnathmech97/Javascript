Async/Await :

Async/Await is used to work with promises in asynchronous functions. It is basically syntactic sugar for promises.

For a successfully resolved promise, we use try and for rejected promise, we use catch. To run a code after the promise has been handled using try or catch, we can .finally() method. 
The code inside .finally() method runs once regardless of the state of the promise.


Example : 


const helperPromise = function () {
	const promise = new Promise(function (resolve, reject) {
	const x = "geeksforgeeks";
	const y = "geeksforgeeks";
	if (x === y) {
		resolve("Strings are same");
	} else {
		reject("Strings are not same");
	}
	});

	return promise;
};

async function demoPromise() {
	try {
	let message = await helperPromise();
	console.log(message);
	} catch (error) {
	console.log("Error: " + error);
	}
}

demoPromise();

