1.In var, Hoisting  allows to use functions & variables , before they are declared.

To avoid hoisting :
2.Declare all variables at the beginning of every scope.

points to note :
functional expression and functional declaration :

EXAMPLE 1:

* functional expression:

alert(foo());                
var foo = function() { 
return 5; 
}

OUTPUT : ERROR! foo wasn't loaded yet

* functional declaration:

alert(foo());                
function foo() {
return 5; 
}

OUTPUT : 5 (Declarations are loaded before any code can run)

EXAMPLE 2:

getName();
console.log(x);

var x = 24;
function getName(){
console.log(" kamal");
}

OUTPUT :
kamal
undefined

EXAMPLE 3:

normalFunc()
const normalFunc = () => {
return "Arrow Function"
}

OUTPUT : ReferenceError: Cannot access 'arrowFunc' before initialization
let and const will be in temporal dead zone untill its declared.
