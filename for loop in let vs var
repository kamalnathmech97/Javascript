example 1 : 

for (var i = 1; i<5; i++) {
  setTimeout(() => {
    console.log(i);
  }, 1000 * i); // Delay increases with each iteration
}

output
5  5  5  5  5

example 2 :

for (var i = 1; i < 5; i++) {
  setTimeout(() => {
    console.log(i);
  }, 1000 * i);
}

output
1 2 3 4 5

The difference in behavior arises from the scoping rules of let and var. let creates a new block-scoped variable for each iteration of the loop, while var creates a single function-scoped variable shared across all iterations. 
As a result, using let ensures that each setTimeout callback captures the correct value of i, while using var results in all callbacks capturing the final value of i.
It's recommended to use let (or const when appropriate) in situations like these to avoid unexpected behaviors related to variable scoping.


